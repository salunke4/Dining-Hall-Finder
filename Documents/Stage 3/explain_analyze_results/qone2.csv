EXPLAIN
"-> Limit: 15 row(s)  (cost=18917924.39 rows=15) (actual time=80535.303..80535.305 rows=15 loops=1)
    -> Inner hash join (no condition)  (cost=18917924.39 rows=189000000) (actual time=80535.302..80535.303 rows=15 loops=1)
        -> Index scan on Menu using Meals  (cost=0.01 rows=1200) (actual time=0.022..0.022 rows=1 loops=1)
        -> Hash
            -> Inner hash join (no condition)  (cost=15773.52 rows=157500) (actual time=80525.124..80525.283 rows=2313 loops=1)
                -> Index scan on h using name_desc  (cost=0.37 rows=750) (actual time=0.498..0.501 rows=12 loops=1)
                -> Hash
                    -> Filter: <in_optimizer>(meal.MealID,meal.MealID in (select #2))  (cost=21.25 rows=210) (actual time=80522.467..80524.512 rows=210 loops=1)
                        -> Index scan on Meal using menu_asc  (cost=21.25 rows=210) (actual time=0.130..1.834 rows=210 loops=1)
                        -> Select #2 (subquery in condition; run only once)
                            -> Filter: ((meal.MealID = `<materialized_subquery>`.MealID))  (actual time=0.001..0.001 rows=1 loops=211)
                                -> Limit: 1 row(s)  (actual time=0.001..0.001 rows=1 loops=211)
                                    -> Index lookup on <materialized_subquery> using <auto_distinct_key> (MealID=meal.MealID)  (actual time=0.000..0.000 rows=1 loops=211)
                                        -> Materialize with deduplication  (actual time=381.623..381.623 rows=1 loops=211)
                                            -> Filter: (count(0) > 1)  (actual time=80522.210..80522.257 rows=210 loops=1)
                                                -> Table scan on <temporary>  (actual time=0.002..0.016 rows=210 loops=1)
                                                    -> Aggregate using temporary table  (actual time=80522.206..80522.235 rows=210 loops=1)
                                                        -> Inner hash join (no condition)  (cost=18916849.83 rows=189000000) (actual time=84.698..14242.745 rows=189000000 loops=1)
                                                            -> Index scan on Menu using Meals  (cost=0.01 rows=1200) (actual time=1.604..3.756 rows=1200 loops=1)
                                                            -> Hash
                                                                -> Inner hash join (no condition)  (cost=15773.52 rows=157500) (actual time=7.895..17.412 rows=157500 loops=1)
                                                                    -> Index scan on DiningHall using name_desc  (cost=0.37 rows=750) (actual time=5.866..6.476 rows=750 loops=1)
                                                                    -> Hash
                                                                        -> Index scan on Meal using menu_asc  (cost=21.25 rows=210) (actual time=1.223..1.720 rows=210 loops=1)
"
